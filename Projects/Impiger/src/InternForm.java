
import java.awt.Color;
import javax.swing.*;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class InternForm extends javax.swing.JFrame {

    static boolean submit;
    static boolean update;

    static String Key;
    static String name;
    static String nationality;
    static String institution;
    static String dateOfBirth;
    static Date dOB;
    static String contact;
    static String email;
    static java.util.Date start;
    static java.util.Date end;
    static String remarks;
    static String gender = null;
    static int cYear;
    static final int minAge = 14;
    static int dobYear;

    Home home = new Home();

    PreparedStatement pst;
    Connection connection;
    Statement statement;
    ResultSet resultSet;
    int currentRow = 0;

    String hostName;
    String userName;
    String password;
    String database;

    boolean exit = true;

    public InternForm() {

        initComponents();

        nameField.setOpaque(false);
        nationalityField.setOpaque(false);
        institutionField.setOpaque(false);
        emailField.setOpaque(false);
        contactField.setOpaque(false);

        submitBt.setOpaque(false);
        submitBt.setContentAreaFilled(false);
        submitBt.setBorderPainted(true);

        updateBt.setOpaque(false);
        updateBt.setContentAreaFilled(false);
        updateBt.setBorderPainted(true);

        cancelBt.setOpaque(false);
        cancelBt.setContentAreaFilled(false);
        cancelBt.setBorderPainted(true);

        setLocationRelativeTo(null);

        if (submit && !update) {
            submitBt.setVisible(true);
            updateBt.setVisible(false);
        } else if (!submit && update) {

            submitBt.setVisible(false);
            updateBt.setVisible(true);

            nameField.setText(name);

            if (gender.equalsIgnoreCase("male")) {
                maleBt.setSelected(true);
            } else {
                femaleBt.setSelected(false);
            }

            nationalityField.setText(nationality);
            institutionField.setText(institution);
            emailField.setText(email);
            contactField.setText(contact);
            remarksField.setText(remarks);
            dob1.setDate(dOB);
            startDate.setDate(start);
            endDate.setDate(end);
        }

    }

    void setValues(String h, String u, String p,String d) {
        hostName = h;
        userName = u;
        password = p;
        database = d;
    }

    public void doConnect() {
        try {

            connection = null;

            String host = "jdbc:mysql://"+hostName+"/"+database;
            String username = userName;
            String password = this.password;

            connection = DriverManager.getConnection(host, username, password);
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            String SQL = "SELECT * FROM `internreport` ";
            resultSet = statement.executeQuery(SQL);
        } catch (SQLException error) {
            System.out.println(error.getMessage());

        }
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBtGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        femaleBt = new javax.swing.JRadioButton();
        maleBt = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        nationalityField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        institutionField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        submitBt = new javax.swing.JButton();
        cancelBt = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarksField = new javax.swing.JTextPane();
        emailField = new javax.swing.JTextField();
        updateBt = new javax.swing.JButton();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        dob1 = new com.toedter.calendar.JDateChooser();
        contactHelp = new javax.swing.JLabel();
        emailHelp = new javax.swing.JLabel();
        contactField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 123, 185));

        jLabel1.setBackground(new java.awt.Color(54, 124, 237));
        jLabel1.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name");

        jLabel2.setBackground(new java.awt.Color(54, 124, 237));
        jLabel2.setFont(new java.awt.Font("Raleway", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Internship Form");

        nameField.setBackground(new java.awt.Color(0, 109, 181));
        nameField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        nameField.setForeground(new java.awt.Color(255, 255, 255));
        nameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(54, 124, 237));
        jLabel3.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gender");

        femaleBt.setBackground(new java.awt.Color(0, 109, 181));
        genderBtGroup.add(femaleBt);
        femaleBt.setFont(new java.awt.Font("Raleway", 0, 20)); // NOI18N
        femaleBt.setForeground(new java.awt.Color(255, 255, 255));
        femaleBt.setText("Female");
        femaleBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleBtActionPerformed(evt);
            }
        });

        maleBt.setBackground(new java.awt.Color(0, 109, 181));
        genderBtGroup.add(maleBt);
        maleBt.setFont(new java.awt.Font("Raleway", 0, 20)); // NOI18N
        maleBt.setForeground(new java.awt.Color(255, 255, 255));
        maleBt.setText("Male");
        maleBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleBtActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(54, 124, 237));
        jLabel4.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nationality");

        nationalityField.setBackground(new java.awt.Color(0, 109, 181));
        nationalityField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        nationalityField.setForeground(new java.awt.Color(255, 255, 255));
        nationalityField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nationalityField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nationalityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalityFieldActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(54, 124, 237));
        jLabel5.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Education Institution");

        institutionField.setBackground(new java.awt.Color(0, 109, 181));
        institutionField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        institutionField.setForeground(new java.awt.Color(255, 255, 255));
        institutionField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        institutionField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setBackground(new java.awt.Color(54, 124, 237));
        jLabel6.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Date Of Birth");

        jLabel7.setBackground(new java.awt.Color(54, 124, 237));
        jLabel7.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact");

        jLabel8.setBackground(new java.awt.Color(54, 124, 237));
        jLabel8.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Email");

        jLabel9.setBackground(new java.awt.Color(54, 124, 237));
        jLabel9.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Start Date");

        jLabel10.setBackground(new java.awt.Color(54, 124, 237));
        jLabel10.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("End Date");

        submitBt.setBackground(new java.awt.Color(0, 109, 181));
        submitBt.setFont(new java.awt.Font("Raleway", 1, 24)); // NOI18N
        submitBt.setForeground(new java.awt.Color(255, 255, 255));
        submitBt.setText("Submit");
        submitBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtActionPerformed(evt);
            }
        });

        cancelBt.setBackground(new java.awt.Color(0, 109, 181));
        cancelBt.setFont(new java.awt.Font("Raleway", 1, 24)); // NOI18N
        cancelBt.setForeground(new java.awt.Color(255, 255, 255));
        cancelBt.setText("Cancel");
        cancelBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(54, 124, 237));
        jLabel11.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Remarks");

        jScrollPane1.setBackground(new java.awt.Color(0, 109, 181));

        remarksField.setBackground(new java.awt.Color(0, 109, 181));
        remarksField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        remarksField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(remarksField);

        emailField.setBackground(new java.awt.Color(0, 109, 181));
        emailField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        emailField.setForeground(new java.awt.Color(255, 255, 255));
        emailField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        emailField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });
        emailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailFieldKeyPressed(evt);
            }
        });

        updateBt.setBackground(new java.awt.Color(0, 109, 181));
        updateBt.setFont(new java.awt.Font("Raleway", 1, 24)); // NOI18N
        updateBt.setForeground(new java.awt.Color(255, 255, 255));
        updateBt.setText("Update");
        updateBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtActionPerformed(evt);
            }
        });

        startDate.setBackground(new java.awt.Color(0, 123, 185));
        startDate.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N

        endDate.setBackground(new java.awt.Color(0, 123, 185));
        endDate.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N

        dob1.setBackground(new java.awt.Color(0, 123, 185));
        dob1.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N

        contactHelp.setBackground(new java.awt.Color(204, 255, 51));
        contactHelp.setForeground(new java.awt.Color(255, 153, 204));

        emailHelp.setBackground(new java.awt.Color(204, 255, 51));
        emailHelp.setForeground(new java.awt.Color(255, 153, 204));

        contactField.setBackground(new java.awt.Color(0, 109, 181));
        contactField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        contactField.setForeground(new java.awt.Color(255, 255, 255));
        try {
            contactField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###)-###-######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        contactField.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(60, 60, 60))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(submitBt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(updateBt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelBt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(nationalityField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(institutionField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(84, 84, 84)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dob1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addComponent(jLabel2))
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(femaleBt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maleBt))
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(120, 120, 120))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(femaleBt)
                    .addComponent(maleBt))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nationalityField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(institutionField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(contactHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(19, 19, 19)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(emailHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(7, 7, 7)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nationalityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nationalityFieldActionPerformed

    private static java.sql.Date convertUtilToSql(Date uDate) {
        java.sql.Date sDate = new java.sql.Date(uDate.getTime());
        return sDate;
    }


    private void submitBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtActionPerformed

        exit = true;

        try {

            Date d = new Date();
            SimpleDateFormat f = new SimpleDateFormat("yyyy");

            cYear = Integer.parseInt(f.format(d));
            dobYear = Integer.parseInt(f.format(dob1.getDate()));

            name = nameField.getText();
            nationality = nationalityField.getText();
            institution = institutionField.getText();
            dOB = dob1.getDate();
            contact = contactField.getText();
            email = emailField.getText();
            start = startDate.getDate();
            end = endDate.getDate();
            remarks = remarksField.getText();

            if (email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$") && contactField.getText().length() >= 10 && end.getTime() >= start.getTime() && cYear - minAge >= dobYear) {

                try {

                    java.sql.Date dateOfBirth = convertUtilToSql(dOB);
                    java.sql.Date startDate = convertUtilToSql(start);
                    java.sql.Date endDate = convertUtilToSql(end);
                    resultSet.moveToInsertRow();

                    resultSet.updateString("Gender", gender);
                    resultSet.updateString("Name", name);
                    resultSet.updateString("Nationality", nationality);
                    resultSet.updateString("Institution", institution);
                    resultSet.updateDate("Date of Birth", dateOfBirth);
                    resultSet.updateString("Email", email);
                    resultSet.updateString("Contact", contact);
                    resultSet.updateDate("Start Date", startDate);
                    resultSet.updateDate("End Date", endDate);
                    resultSet.updateString("Remarks", remarks);

                    resultSet.insertRow();
                    statement.close();
                    resultSet.close();
                } catch (SQLException error) {
                    JOptionPane.showMessageDialog(this, "We encountered a problem connecting to the database");
                    exit = false;
                }
            } else if (cYear - minAge < dobYear) {

                // If The age is less than the age limit
                JOptionPane.showMessageDialog(null, "The age cannot be less than " + minAge + " years old");
                exit = false;
            } else if (!email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$")) {

                // If The email is not valid
                JOptionPane.showMessageDialog(null, "Please Enter a valid email address");
                exit = false;
            } else if (contactField.getText().length() < 10) {

                // If The Phone number is short or is not valid
                JOptionPane.showMessageDialog(null, "Please Enter a valid phone number");
                exit = false;
            } else if (end.getTime() < start.getTime()) {

                //If start Date is after end date
                JOptionPane.showMessageDialog(null, "End date cannot be before start date");
                exit = false;

            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Oopps! Please enter valid values");
            exit = false;
        }

        if (exit == true) {
            setVisible(false);
            home.setValues(hostName, userName, password,database);
            home.start();
            home.setVisible(true);
            home.updateTable();
            JOptionPane.showMessageDialog(null, "Intern Successfully added");
        }


    }//GEN-LAST:event_submitBtActionPerformed

    private void cancelBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtActionPerformed
        // TODO add your handling code here:

        nameField.setText(null);
        nationalityField.setText(null);
        institutionField.setText(null);
        emailField.setText(null);
        contactField.setText(null);
        dob1.setDate(null);
        startDate.setDate(null);
        endDate.setDate(null);
        maleBt.setSelected(false);
        femaleBt.setSelected(false);

        setVisible(false);
        home.setValues(hostName, userName, password,database);
        home.start();
        home.setVisible(true);

    }//GEN-LAST:event_cancelBtActionPerformed

    private void femaleBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleBtActionPerformed
        // TODO add your handling code here:

        gender = "Female";
    }//GEN-LAST:event_femaleBtActionPerformed

    private void maleBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleBtActionPerformed
        // TODO add your handling code here:

        gender = "Male";

    }//GEN-LAST:event_maleBtActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_emailFieldActionPerformed

    private void updateBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtActionPerformed

        String keyname = name;
        exit = true;

        try {

            Date d = new Date();
            SimpleDateFormat f = new SimpleDateFormat("yyyy");

            String newEmail;

            cYear = Integer.parseInt(f.format(d));
            dobYear = Integer.parseInt(f.format(dob1.getDate()));

            name = nameField.getText();
            nationality = nationalityField.getText();
            institution = institutionField.getText();
            dOB = dob1.getDate();
            contact = contactField.getText();
            start = startDate.getDate();
            end = endDate.getDate();
            remarks = remarksField.getText();
            newEmail = emailField.getText();

            if (newEmail.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$") && contactField.getText().length() >= 10 && end.getTime() >= start.getTime() && cYear - minAge >= dobYear) {

                try {

                    java.sql.Date dateOfBirth = convertUtilToSql(dOB);
                    java.sql.Date startDate = convertUtilToSql(start);
                    java.sql.Date endDate = convertUtilToSql(end);

                    String query = ("UPDATE `internreport` SET `Name` = '" + name + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Gender` = '" + gender + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Nationality` = '" + nationality + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Institution` = '" + institution + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Contact` = '" + contact + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Email` = '" + newEmail + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Date of Birth` = '" + dateOfBirth + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Start Date` = '" + startDate + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `End Date` = '" + endDate + "' WHERE `internreport`.`Email` = '" + email + "';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    query = ("UPDATE `internreport` SET `Remarks` = '" + remarks + "' WHERE `internreport`.`Email` = '" + email + " ';");
                    pst = connection.prepareStatement(query);
                    pst.executeUpdate();

                    email = newEmail;

                    statement.close();
                    resultSet.close();

                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(this, "We encountered a problem connecting to the database");
                    exit = false;
                }

            } else if (cYear - minAge < dobYear) {

                // If The age is less than the age limit
                JOptionPane.showMessageDialog(null, "The age cannot be less than " + minAge + " years old");
                exit = false;
            } else if (!email.matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$")) {

                // If The email is not valid
                JOptionPane.showMessageDialog(null, "Please Enter a valid email address");
                exit = false;
            } else if (contactField.getText().length() < 10) {

                // If The Phone number is short 
                JOptionPane.showMessageDialog(null, "Please Enter a valid phone number");
                exit = false;
            } else if (end.getTime() < start.getTime()) {

                //If start Date is after end date
                JOptionPane.showMessageDialog(null, "End date cannot be before start date");
                exit = false;

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oopps! Please enter valid values");
            exit = false;
        }

        if (exit == true) {
            setVisible(false);
            home.setValues(hostName, userName, password,database);
            home.start();
            home.setVisible(true);
            home.updateTable();
            JOptionPane.showMessageDialog(null, "Successfully updated details of " + keyname);
        }


    }//GEN-LAST:event_updateBtActionPerformed

    private void emailFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailFieldKeyPressed
        // TODO add your handling code here:

        if (!emailField.getText().matches("^[A-Za-z0-9_.]+[@][A-Za-z.]+$")) {
            emailHelp.setForeground(new Color(222, 45, 52));
            emailHelp.setText("Please enter a valid email address");
        } else {
            emailHelp.setText(null);
        }


    }//GEN-LAST:event_emailFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InternForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InternForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InternForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InternForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InternForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBt;
    private javax.swing.JFormattedTextField contactField;
    private javax.swing.JLabel contactHelp;
    private com.toedter.calendar.JDateChooser dob1;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailHelp;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JRadioButton femaleBt;
    private javax.swing.ButtonGroup genderBtGroup;
    private javax.swing.JTextField institutionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton maleBt;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nationalityField;
    private javax.swing.JTextPane remarksField;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JButton submitBt;
    private javax.swing.JButton updateBt;
    // End of variables declaration//GEN-END:variables
}
